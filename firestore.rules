
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users can read their own profile, and anyone can read public profiles
    match /users/{userId} {
      allow read: if true;
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      
      // Recipes and Menus are user-specific
      match /recipes/{recipeId} {
        allow read, write, delete: if isOwner(userId);
      }
      
      match /menus/{menuId} {
        allow read, write, delete: if isOwner(userId);
      }
       // Follow/unfollow rules
      match /followers/{followerId} {
        allow read: if true;
        allow write, delete: if isOwner(followerId) || isOwner(userId);
      }
      match /following/{followingId} {
        allow read: if true;
        allow write, delete: if isOwner(followingId) || isOwner(userId);
      }
    }

    // Community recipes can be read by anyone, but only created/updated by authenticated users
    match /published_recipes/{recipeId} {
      allow read: if true;
      allow create: if isAuthenticated();
      // Only the original publisher can update or delete their recipe
      allow update, delete: if isOwner(resource.data.publisherId);
    }
  }
}
