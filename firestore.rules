rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // User profiles are public, but users can only edit their own data.
    match /users/{userId} {
      // Anyone can read public profile information.
      allow read: if true;
      // Only the authenticated user can create or update their own document.
      allow write: if request.auth != null && request.auth.uid == userId;

      // Subcollections for recipes and menus are private to the user.
      match /recipes/{recipeId} {
        allow read, write, delete: if request.auth != null && request.auth.uid == userId;
      }
      match /menus/{menuId} {
        allow read, write, delete: if request.auth != null && request.auth.uid == userId;
      }

      // A user can manage their own "following" list.
      match /following/{targetUserId} {
        allow read, write, delete: if request.auth != null && request.auth.uid == userId;
      }
      // A user can be added/removed to another's "followers" list.
      match /followers/{followerId} {
        // Anyone can see who follows a user.
        allow read: if true;
        // The follower themself must perform the write/delete action.
        allow write, delete: if request.auth != null && request.auth.uid == followerId;
      }
    }

    // Published recipes are public to read, but creating/editing is restricted.
    match /published_recipes/{recipeId} {
      allow read: if true;
      // User must be logged in and the publisherId in the new document must match their UID.
      allow create: if request.auth != null && request.resource.data.publisherId == request.auth.uid;
      // Only the original publisher can update or delete their recipe.
      allow update, delete: if request.auth != null && resource.data.publisherId == request.auth.uid;
    }
  }
}
