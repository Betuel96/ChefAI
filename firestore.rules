rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Usernames: for unique username checks
    match /usernames/{username} {
      allow get;
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
    }
    
    // Admins: Only readable by other admins (or functions with elevated privileges)
    match /admins/{userId} {
      allow read, write: if false; // Should be managed from server/console
    }

    // Verification Requests: Writable by any authenticated user, readable only by admins.
    match /verification_requests/{requestId} {
      allow create: if isAuthenticated();
      allow read, write, delete: if false; // Processed by admin functions
    }
    
    // User profiles
    match /users/{userId} {
      // Anyone can view a profile
      allow get;
      // Only the owner can create or update their profile
      allow create, update: if isOwner(userId);
      // Users should not be able to delete their own accounts from the client
      allow delete: if false;

      // Subcollections for a user
      match /recipes/{recipeId} {
        allow read, write, delete: if isOwner(userId);
      }
      match /menus/{menuId} {
        allow read, write, delete: if isOwner(userId);
      }
      match /followers/{followerId} {
        allow read; // Anyone can see who follows a user
        allow create, delete: if isAuthenticated(); // Any logged in user can follow/unfollow
      }
      match /following/{followingId} {
        allow read; // Anyone can see who a user follows
        allow create, delete: if isAuthenticated(); // Any logged in user can follow/unfollow
      }
       match /notifications/{notificationId} {
        allow read, write, delete: if isOwner(userId);
      }
      match /savedPosts/{postId} {
        allow read, write, delete: if isOwner(userId);
      }
    }

    // Main content feed
    match /published_recipes/{postId} {
      // Anyone can read a published post
      allow get;
      // Only authenticated users can create posts
      allow create: if isAuthenticated();
      // Only the owner can update or delete their post
      allow update, delete: if isAuthenticated() && isOwner(resource.data.publisherId);

      // Comments subcollection
      match /comments/{commentId} {
        allow read, create: if isAuthenticated();
        // Likes on comments
        match /likes/{userId} {
           allow read, create, delete: if isAuthenticated();
        }
      }
      // Likes subcollection
      match /likes/{userId} {
        allow read, create, delete: if isAuthenticated();
      }
    }

    // Stories
    match /stories/{storyId} {
       allow read, create: if isAuthenticated();
       allow delete: if isAuthenticated() && isOwner(resource.data.publisherId);
    }
  }
}
