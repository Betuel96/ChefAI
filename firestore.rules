rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Allow authenticated users to read any public recipe/post.
    // Allow authenticated users to create/update/delete their own posts.
    match /published_recipes/{postId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.publisherId;
      allow update, delete: if request.auth.uid == resource.data.publisherId;
      
      // Allow authenticated users to interact with comments and likes.
      match /{subcollection}/{docId} {
        allow read, write: if request.auth != null;
      }
    }

    // Allow authenticated users to read any user's public profile data.
    // Allow a user to create and update their own document.
    match /users/{userId} {
      allow get: if request.auth != null;
      allow create, update: if request.auth.uid == userId;

      // Allow users to read/write their own private subcollections.
      match /recipes/{docId} {
         allow read, write: if request.auth.uid == userId;
      }
      match /menus/{docId} {
         allow read, write: if request.auth.uid == userId;
      }
      
      // Allow any authenticated user to read a user's followers/following list.
      match /followers/{followerId} {
        allow read, write: if request.auth != null;
      }
      match /following/{followingId} {
        allow read, write: if request.auth != null;
      }
    }
    
    // Rules for enforcing unique usernames
    match /usernames/{username} {
      // Allow anyone to read, to check for existence before creating.
      allow get;
      // Allow a user to create a username doc only for themselves.
      allow create: if request.auth.uid == request.resource.data.userId;
      // Allow a user to delete their own old username doc.
      allow delete: if request.auth.uid == resource.data.userId;
      // Nobody can change a username doc once created.
      allow update: if false;
    }
  }
}