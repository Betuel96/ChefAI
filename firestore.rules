
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      // Allow anyone to get a specific user's public profile.
      // This prevents listing all users but allows viewing profiles.
      allow get: if true;
      
      // A user can create their own document.
      allow create: if request.auth.uid == userId;
      
      // A user can only update their own profile data.
      // The `isPremium` status cannot be changed by the user.
      allow update: if request.auth.uid == userId && request.resource.data.isPremium == resource.data.isPremium;

      // Users cannot delete their accounts from the client.
      allow delete: if false;

      // Rules for private user subcollections
      match /recipes/{recipeId} {
        allow read, write, delete: if request.auth.uid == userId;
      }

      match /menus/{menuId} {
        allow read, write, delete: if request.auth.uid == userId;
      }

      // Followers and Following subcollections
      match /followers/{followerId} {
        allow read: if true;
        // You can only follow/unfollow for yourself. `followerId` must be you.
        allow write: if request.auth.uid == followerId;
      }
      match /following/{followedId} {
        allow read: if true;
        // You can only manage your own 'following' list. `userId` must be you.
        allow write: if request.auth.uid == userId;
      }
    }

    // Rules for the public collection of recipes
    match /published_recipes/{recipeId} {
      // Anyone can read published recipes.
      allow read: if true;

      // An authenticated user can publish a recipe if the publisherId is their own.
      allow create: if request.auth.uid == request.resource.data.publisherId;

      // Only the publisher can update or delete their own recipe.
      allow update, delete: if request.auth.uid == resource.data.publisherId;
    }
  }
}
