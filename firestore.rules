rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- User Profile Data ---
    // A user can read their own profile.
    // Anyone authenticated can get another user's public profile.
    // A user can only update their own profile.
    match /users/{userId} {
      allow get: if request.auth != null;
      allow update: if request.auth.uid == userId;
    }

    // --- User's Private Content (Recipes and Menus) ---
    // A user has full control over their own recipes and menus.
    match /users/{userId}/{collection in ['recipes', 'menus']}/{docId} {
      allow read, write, delete: if request.auth.uid == userId;
    }
    
    // --- Following Logic ---
    // A user has full control over their own 'following' list.
    match /users/{userId}/following/{followedId} {
        allow read, write, delete: if request.auth.uid == userId;
    }
    
    // --- Followers Logic ---
    // ANYONE authenticated can see who follows a user.
    // A user can add/remove THEMSELVES from another user's followers list.
    match /users/{followedId}/followers/{followerId} {
        allow list, get: if request.auth != null;
        allow create, delete: if request.auth.uid == followerId;
    }

    // --- Publicly Published Recipes ---
    // Anyone authenticated can read published recipes.
    // A user can only create/update/delete their own publications.
    match /published_recipes/{recipeId} {
      allow list, get: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.publisherId;
      update, delete: if request.auth.uid == resource.data.publisherId;
    }
  }
}
