
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Default Security: Deny all by default ---
    match /{document=**} {
      allow read, write: if false;
    }

    // --- Usernames: Publicly readable for checks, only creatable by authenticated users ---
    match /usernames/{username} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if false;
    }

    // --- User Profiles & Subcollections ---
    match /users/{userId} {
      // Profile document: Allow authenticated users to read profiles, owner can update
      allow get: if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId;
      allow delete: if false; // Prevent user self-deletion from client

      // User's private subcollections (recipes, menus, etc.)
      // Only the owner can access these
      match /{subcollection}/{docId} {
        allow read, write, delete: if request.auth.uid == userId;
      }
    }

    // --- Published Content (Community Feed) ---
    match /published_recipes/{postId} {
      // Anyone can read posts
      allow read: if true;
      // Only authenticated users can create posts
      allow create: if request.auth != null;
      // Only the owner can update or delete their post
      allow update, delete: if request.auth.uid == resource.data.publisherId;

      // --- Likes on Posts ---
      match /likes/{userId} {
        allow read: if true;
        // Authenticated users can like/unlike
        allow write: if request.auth.uid == userId;
      }

      // --- Comments on Posts ---
      match /comments/{commentId} {
        // Anyone can read comments
        allow read: if true;
        // Authenticated users can create comments
        allow create: if request.auth != null;
        // Owner can update/delete their own comment
        allow update, delete: if request.auth.uid == resource.data.userId;

        // --- Likes on Comments ---
        match /likes/{userId} {
          allow read: if true;
          allow write: if request.auth.uid == userId;
        }
      }
    }
    
    // --- Stories ---
    match /stories/{storyId} {
        allow read: if request.auth != null; // Only auth users can see stories
        allow create: if request.auth != null;
        allow delete: if request.auth.uid == resource.data.publisherId;
    }

    // --- Admins & Verification Requests (Admin-only access) ---
    // Note: Admin logic is handled by server-side functions (Cloud Functions)
    // which have privileged access. These client-side rules are for defense-in-depth.
    match /admins/{adminId} {
        allow read, write: if false; // No client access
    }

    match /verification_requests/{requestId} {
        allow read, write: if false; // No client access
    }
  }
}
