
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Test Rules: Allow reads and writes if the user is authenticated ---
    match /{document=**} {
      allow read, write: if request.auth != null;
    }

    // --- Production Rules (Commented out for now) ---
    /*
    // USERS
    // Anyone can read a user's public profile data.
    // A user can only write to their own document.
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // USERNAMES
    // Usernames must be unique.
    // Anyone can read, but only the associated user can create their username doc.
    match /usernames/{username} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update, delete: if false;
    }

    // PUBLISHED RECIPES (POSTS)
    // Anyone can read any published recipe.
    // A user can create a post.
    // A user can only update/delete their own posts.
    match /published_recipes/{recipeId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && resource.data.publisherId == request.auth.uid;

      // LIKES
      // Anyone authenticated can read likes.
      // A user can only like/unlike for themselves.
      match /likes/{userId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && request.auth.uid == userId;
      }

      // COMMENTS
      // Anyone can read comments.
      // Authenticated users can create comments.
      // Users can only delete their own comments.
      match /comments/{commentId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
        
        // COMMENT LIKES
        match /likes/{userId} {
          allow read: if request.auth != null;
          allow write: if request.auth != null && request.auth.uid == userId;
        }
      }
    }

    // USER-SPECIFIC SUBCOLLECTIONS
    match /users/{userId}/{collection}/{docId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    */
  }
}

    