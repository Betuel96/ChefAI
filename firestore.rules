rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      // Authenticated users can read public profile info.
      allow get: if request.auth != null;
      // Users can create and update their own document.
      allow write: if request.auth.uid == userId;

      // Users cannot list all other users or delete accounts from the client.
      allow list, delete: if false;

      // Sub-collections for user-specific data
      match /recipes/{recipeId} {
        allow read, write, delete: if request.auth.uid == userId;
      }
      match /menus/{menuId} {
        allow read, write, delete: if request.auth.uid == userId;
      }

      // Followers/Following sub-collections
      match /followers/{followerId} {
        // Anyone can see who follows a user (for follower counts).
        allow read: if request.auth != null;
        // A user can only add/remove themself from someone's followers list.
        // This means the document ID must match the writer's UID.
        allow write: if request.auth.uid == followerId;
      }
      match /following/{targetId} {
        // Anyone can see who a user is following (for following counts).
        allow read: if request.auth != null;
        // A user can only modify their own 'following' list.
        allow write: if request.auth.uid == userId;
      }
    }

    match /published_recipes/{recipeId} {
      // Anyone can read published recipes.
      allow read: if true;
      // Users can only create recipes where they are the publisher.
      allow create: if request.auth.uid == request.resource.data.publisherId;
      // Users can only delete their own recipes.
      allow delete: if request.auth.uid == resource.data.publisherId;
      // Updates are not allowed for now to keep things simple.
      allow update: if false;
    }
  }
}
