rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read anyone's profile, but can only write to their own.
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;

      // Sub-collections for private user data
      match /recipes/{recipeId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      match /menus/{menuId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      // Sub-collections for social graph
      match /followers/{followerId} {
        allow read: if true;
        // A user can add/remove themself from another user's followers list.
        allow write: if request.auth != null && request.auth.uid == followerId;
      }
      match /following/{followedId} {
        allow read: if true;
        // A user can manage their own list of who they follow.
        allow write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Collection for all public recipes
    match /published_recipes/{recipeId} {
      allow read: if true;

      // Only an authenticated user can create a recipe, and they must be the author.
      allow create: if request.auth != null && request.auth.uid == request.resource.data.publisherId;

      // Only the author can update or delete their recipe.
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.publisherId;
    }
  }
}
