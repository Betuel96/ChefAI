rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAuth() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuth() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuth() && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if isAuth();
      allow update: if isOwner(userId);

      match /recipes/{recipeId} {
        allow read, write: if isOwner(userId);
      }
      match /menus/{menuId} {
        allow read, write: if isOwner(userId);
      }
      match /followers/{followerId} {
         allow read, delete: if isOwner(userId);
      }
       match /following/{followingId} {
         allow read, delete: if isOwner(userId);
      }
       match /notifications/{notificationId} {
         allow read, write, delete: if isOwner(userId);
      }
       match /savedPosts/{postId} {
         allow read, write, delete: if isOwner(userId);
      }
    }
    
    match /users/{userId} {
        allow list: if isAdmin();
    }

    match /usernames/{username} {
        allow get: if true;
        allow create: if isAuth();
    }

    match /admins/{adminId} {
      allow get: if isOwner(adminId) || isAdmin();
      allow list: if isAdmin();
    }

    match /published_recipes/{postId} {
      function isPostOwner() {
         return isOwner(resource.data.publisherId);
      }
    
      allow read: if resource.data.profileType == 'public' || isPostOwner() || isAdmin();
      allow create: if isAuth();
      allow update: if isPostOwner() || isAdmin();
      allow delete: if isPostOwner() || isAdmin();
      
      match /comments/{commentId} {
         function isCommentOwner() {
            return isOwner(resource.data.userId);
         }
         allow read: if true;
         allow create: if isAuth();
         allow update, delete: if isCommentOwner() || isAdmin();
         
         match /likes/{likeId} {
            allow read: if true;
            allow create, delete: if isAuth();
         }
      }
      
       match /likes/{likeId} {
         allow read: if true;
         allow create, delete: if isAuth();
      }
    }
    
    match /stories/{storyId} {
        allow read: if isAuth();
        allow create: if isOwner(request.resource.data.publisherId);
        allow delete: if isOwner(resource.data.publisherId) || isAdmin();
    }
  }
}
