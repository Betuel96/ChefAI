rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Reglas de Usuario: Los usuarios pueden leer y escribir su propio documento.
    // Nadie más puede leer los datos de otros usuarios.
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;

      // Subcolecciones de usuario (recetas, menús, etc.)
      match /{collection}/{docId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // Regla para Nombres de Usuario: Asegura que los nombres de usuario sean únicos.
    // Solo se puede crear si el usuario está creando su perfil.
    match /usernames/{username} {
      allow read;
      allow create: if request.auth != null;
    }

    // Reglas de Contenido Público: Cualquiera puede leer, pero solo usuarios autenticados pueden crear.
    match /published_recipes/{postId} {
      allow read;
      allow create, update: if request.auth != null;
      // Solo el autor del post puede eliminarlo.
      allow delete: if request.auth != null && request.auth.uid == resource.data.publisherId;

      // Subcolecciones de posts (comentarios, me gusta)
      match /{collection}/{docId} {
        allow read, write: if request.auth != null;
      }
    }
    
    // Reglas de Historias (Stories)
    match /stories/{storyId} {
      allow read; // Generalmente las historias son públicas o para seguidores
      allow create: if request.auth != null;
      allow delete: if request.auth != null && request.auth.uid == resource.data.publisherId;
    }
    
    // Reglas para Administradores
    match /admins/{adminId} {
        allow read: if request.auth != null && request.auth.uid == adminId;
        // En un caso real, la escritura podría estar limitada a una Cloud Function
        allow write: if false; 
    }
    
    // Reglas para Solicitudes de Verificación
    match /verification_requests/{requestId} {
        allow create: if request.auth != null;
        // Solo los administradores (a través de una función de nube) pueden leer/eliminar
        allow read, delete: if false;
    }
  }
}
